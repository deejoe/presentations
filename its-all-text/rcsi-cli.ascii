
Introduction

Review
Expand
Practice

Why CLI?

Unix has survived and adapted for 40 years.

Consistent, constant, stable and widespread way of interacting with the
computer.

Efficient and precise. You can issue the commands to the computer, you can
record it exactly, you can convey to someone else exactly.

Review: Essentials

Finding the terminal

  * In Ubuntu: Applications->Accessories->Terminal

  * Generic Linux virtual terminal: Ctrl-Alt-Fn usually for n=1..6. Switch
    amongst VTs with Alt-Fn. Alt-F7 back to X (the GUI).

Navigation commands

  * pwd -- print working directory -- where am I?

  * cd - change directory -- I want to go somewhere else?

  * ls -- list -- what's here?

Pagers

  * more -- run-of-the-mill paging

  * less -- advanced pager with ability to backup, doesn't fall off the end

  * pg -- a two-letter command, of course

Documentation

  * man ls

  * apropos rename

The simplest programs: pipelines

  * ls -al | less

        STDOUT STDIN STDERR

The pipe character '|' is used to send the output of the preceding command into
the following command. Simple programs aka "one-liners".

Several commands can be strung together.

find . -maxdepth 1 -type d  -name "*_files" -print0 | xargs -0 -n1 -i basename 
{} _files | xargs  -n1 -i echo mkdir web-saved/{} \; mv {}_files web-saved/{} 
\; mv {}?* web-saved/{} > web-saved/files_files2.sh

Filtering

  * grep ly$ /usr/share/dict/words | grep [A-Z] | less

  * ^ start $ end ? single character * glob of characters

Making changes: Line and history editing

  * history -- show commands you've issued

  * Use up and down arrows to move around history

  * Use tab completion to save typing

  * ctrl-a to beginning of line, ctrl-e to end of line

      * !n -- nth from history,

      * !! -- previous from history

      * !* -- 1st token from previous

      * !$ -- all but 1st from previous

      * ^f^b^ -- sub b for f in previous

Making changes: Retail

Text editors:

  * examples: nano/pico, vi, emacs

  * survival commands: (how to exit) ctrl-x, Esc Esc Esc :q!, Ctrl-x Ctrl-c

Redirection
to create or overwrite a file use >

    echo foo > bar; cat bar

to create or add to a file use >>

    echo quux >> bar; cat bar

Take command: Processes and job control

    ps; top

  * ctrl-c -- kill (permanent)

  * ctrl-z -- suspend (temporary)

  * jobs -- show jobs and their state

  * fg -- foreground

  * bg -- background

  * nice -- lower priority

  * time -- how long?

  * kill -- end a process

example -- "Help, firefox is out of control!"

Making changes: Wholesale

  * cp -- copy

  * rm -- remove -- delete CAUTION NO RECOVERY GONE FOR GOOD

  * mv -- move -- also rename

Usage Examples:

  * cp a way to make a backup file, say, of /etc/apt/sources.list

  * rm the editor's backup files eg foo~

  * mv as a way to rename image files, say, a cryptically named image file

Querying system state: hardware

"extended" ls commands

  * dmesg -- display kernel mesages

  * lsmod -- kernel modules

  * lspci -- pci bus devices

  * lsusb -- usb devices

  * lshal -- hardware access layer

  * lshw -- hardware

Querying system state: installed software (Debian & Ubuntu)

  * dpkg -l | less -- show all packages

  * dpkg -L nano | less -- show files in a package

  * dpkg -S /usr/bin/nano -- this file belongs to which package?

LSB /bin, /sbin, /etc, /home, /lib, /usr/bin, /usr/sbin, /usr/lib ...

System state

  * df -- disk free

  * du -- disk usage

  * netstat -- network status

  * less /proc/cpuinfo

  * less /proc/meminfo

  * ifconfig

  * ls /var/log

  * ls /etc

environment variables

  * echo $HOME; echo $PATH -- show two most common

  * env -- show all environment variables

  * set FOO=bar; echo $FOO

Advance topics for later?

  * advanced grep (context, case), wc, with lsmod and ps

  * less -N  -- numbering

  * find foo -name "bar*" | xargs -n1 -i echo {}

  * chown newuser:newuser foo changing ownership

  * chmod go+r foo change access mode (permissions)

  * rsync -- convergent synchronization (local or over net)

  * scp -- remote (secure) copying

  * ssh -- remote login

  * screen -- detachable & re-attachable cli session

  * others: lynx w3m wget curl links -- CL web tools

  * others: head tail split cut -- slicing and dicing text

  * alternate shells: csh, tcsh, ksh, zsh, ash, dash

     1. Introduction
     2. Why CLI?
     3. Review: Essentials
         1. Finding the terminal
         2. Navigation commands
         3. Pagers
         4. Documentation
     4. The simplest programs: pipelines
     5. Filtering
     6. Making changes: Line and history editing
     7. Making changes: Retail
     8. Take command: Processes and job control
     9. Making changes: Wholesale
    10. Querying system state: hardware
    11. Querying system state: installed software (Debian & Ubuntu)
    12. System state
    13. environment variables
    14. Advance topics for later?

